use mongodb :: bson :: uuid :: Uuid ; use mongodb :: Database ; # [doc = " The Schemable trait provides the details associated with a data model struct"] # [doc = " necessary to safely delete it and all the data an instance of this model owns."] pub trait Schemable { fn collection_name () -> & 'static str ; fn cascade_delete (& self) ; fn index_name () -> & 'static str ; fn index_value (& self) -> Uuid ; } # [doc = " Safe deletion for an object that implements the `Schemable` trait, where \"safety\""] # [doc = " is defined as the property that deleting a Schemable deletes all of the data it"] # [doc = " exclusively owns, i.e. leaves no orphaned data."] pub fn safe_delete < T : Schemable > (to_delete : & T , db : & Database) { println ! ("hello world from generated safe_delete :)") ; }